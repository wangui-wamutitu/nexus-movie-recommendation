# Generated by Django 4.2.7 on 2025-09-24 07:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(db_index=True, unique=True)),
                ('imdb_id', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(max_length=255)),
                ('original_title', models.CharField(blank=True, max_length=255)),
                ('overview', models.TextField(blank=True)),
                ('tagline', models.CharField(blank=True, max_length=255)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('poster_path', models.CharField(blank=True, max_length=255)),
                ('backdrop_path', models.CharField(blank=True, max_length=255)),
                ('vote_average', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('vote_count', models.IntegerField(default=0)),
                ('popularity', models.FloatField(default=0.0)),
                ('runtime', models.IntegerField(blank=True, null=True)),
                ('budget', models.BigIntegerField(blank=True, null=True)),
                ('revenue', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('rumored', 'Rumored'), ('planned', 'Planned'), ('in_production', 'In Production'), ('post_production', 'Post Production'), ('released', 'Released'), ('canceled', 'Canceled')], default='released', max_length=20)),
                ('original_language', models.CharField(default='en', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('genres', models.ManyToManyField(blank=True, to='movies.genre')),
            ],
            options={
                'ordering': ['-popularity', '-release_date'],
            },
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['tmdb_id'], name='movies_movi_tmdb_id_0e4cad_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['release_date'], name='movies_movi_release_b7ac7d_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['popularity'], name='movies_movi_popular_114287_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['vote_average'], name='movies_movi_vote_av_ca6eee_idx'),
        ),
    ]
